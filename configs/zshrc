# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH
#
# set -xv
# Path to your oh-my-zsh installation.
export ZSH=~/.oh-my-zsh

path+=/Users/$USER/bin
# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes

# ZSH_THEME="spaceship"
ZSH_THEME="powerlevel10k/powerlevel10k"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    z 
    vi-mode 
    zsh-syntax-highlighting 
    zsh-autosuggestions 
    docker 
    python 
    pip 
    up
)

PATH=$PATH:/usr/local/sbin

source $ZSH/oh-my-zsh.sh

# want your terminal to support 256 color schemes? I do ...
export TERM="xterm-256color"
#
# # if you do a 'rm *', Zsh will give you a sanity check!
setopt RM_STAR_WAIT
#
# # allows you to type Bash style comments on your command line
# # good 'ol Bash
setopt interactivecomments
#
# # Zsh has a spelling corrector
setopt CORRECT

bindkey 'jk' vi-cmd-mode

export EDITOR="vim"
export VISUAL="vim"
export USE_EDITOR="vim"

fpath+=($ZSH/plugins/docker)

for config in "$HOME"/.zshrc.d/* ; do
    source "$config"
done
# unset -v config
[ -f ~/.work_aliases ] && source ~/.work_aliases
[ -f ~/.work_funcs ] && source ~/.work_funcs
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export FZE_DEFAULT_OPS="--extended" # enable us to use regex when matching on results like txt$
export FZF_DEFAULT_COMMAND='ag -g ""'

eval "$(direnv hook zsh)"
eval $(thefuck --alias)

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/gidgid/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/gidgid/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/gidgid/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/gidgid/google-cloud-sdk/completion.zsh.inc'; fi

# without the following snippet pasting is very slow
# This speeds up pasting w/ autosuggest
# https://github.com/zsh-users/zsh-autosuggestions/issues/238
pasteinit() {
  OLD_SELF_INSERT=${${(s.:.)widgets[self-insert]}[2,3]}
  zle -N self-insert url-quote-magic # I wonder if you'd need `.url-quote-magic`?
}

pastefinish() {
  zle -N self-insert $OLD_SELF_INSERT
}
zstyle :bracketed-paste-magic paste-init pasteinit
zstyle :bracketed-paste-magic paste-finish pastefinish

[[ $commands[kubectl] ]] && source <(kubectl completion zsh)
# alias kcl=kubectl
# complete -F __start_kubectl kcl
export PYENV_VIRTUALENV_DISABLE_PROMPT=1
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
