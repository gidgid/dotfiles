[alias]
	st = status

  # checkouts
	co = checkout
  cob = checkout -b
  cop = checkout -p # checkout with path
  ## checkout to branch by regex
  cor = "!checkout_by_regex() { git checkout $(git branch | grep -e \"$1\" | head -n1); }; checkout_by_regex"
  cof = "!checkout_with_fzf() { git branch | fzf | xargs git checkout; }; checkout_with_fzf"

  # branches
  br = branch
  bra = branch -a
  brr = branch -r
  ## prints #<num> last branches
  lb = "!print_last_branches() { git reflog | grep -o \"checkout: moving from .* to \" | sed -e 's/checkout: moving from //' -e 's/ to $//' | head -$1 | nl; }; print_last_branches"

  # commits
  ## show all diffs when entering commit
  ct = commit --verbose
  ## adds all files and then commits them
  cta = commit -a --verbose
  ctm = commit -m
  amend = commit --verbose --amend

  # adds
  ## stage ALL changes https://stackoverflow.com/questions/572549/difference-between-git-add-a-and-git-add?rq=1
  aa = add -A
  ap = add -p
  ## add without untracked
  au = add -u
  aac = !git add -A && git commit --verbose
  aaf = "!add_with_fzf() { git status -s | awk '{print $2}' | fzf -m | xargs git add; }; add_with_fzf"

  # diffs
  df = diff
  ## df with stage
  dfws = diff --staged
  ## df between staged and last commit
  dfsc = diff --staged HEAD
  ## df between last commit
  dflc = diff HEAD^ HEAD
  dfnames = diff --name-only

  # rebase
  rb = rebase
  rbi = rebase -i

  # visualizing the commit history
	l = "!source ~/.githelpers && pretty_git_log"
  lgp = log --oneline --graph --decorate --pretty=format:\"%C(auto)%d%C(reset) %s %C(magenta)(%ar)%C(reset) %C(cyan)%h%C(reset) %C(red)[%cn]%C(reset)\"

  # stash
  ss = stash
  ssl = stash list
  sss = stash save

  # push
  ps = push
  psf = push -f
  psdry = push --dry-run
  pom = push origin master

  # pull
  pl = pull

  # temporarily ignore files
  tignore = update-index --assume-unchanged
  # remove temporarily ignore files
  tuignore = update-index --no-assume-unchanged

  # prints the name of the branch
  name = "! git rev-parse --abbrev-ref HEAD"

 # alias = config --get-regexp ^alias
  alias = "!print_aliases() { git config --get-regexp ^alias | sed s/alias.//g; }; print_aliases"
#  lb = "!print_last_branches() { git reflog | grep -o \"checkout: moving from .* to \" | sed -e 's/checkout: moving from //' -e 's/ to $//' | head -$1 | nl; }; print_last_branches"

[color]
	ui = auto
[core]
	editor = vim
	excludesfile = ~/.gitignore
[user]
	name = Gideon Caller
	email = caller.gideon@gmail.com
[commit]
	verbose = true
